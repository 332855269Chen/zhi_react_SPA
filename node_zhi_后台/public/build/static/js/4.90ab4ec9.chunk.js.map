{"version":3,"sources":["pages/Home.js"],"names":["Home","state","this","props","getHome","home","banner","className","style","marginTop","list","dataName","isShowId","React","Component","connect","ipttxt","column","dispatch","getDate","url","type","UPDATE_HOME","_limit","viewNav","bl","CHAN_IPTTXT","payload"],"mappings":"mPASMA,E,2MACJC,MAAM,G,mFAiBJC,KAAKC,MAAMC,Y,+BAIJ,IAAD,EACcF,KAAKC,MAApBE,EADC,EACDA,KADC,EACIC,OACV,OACE,yBAAKC,UAAU,OAAOC,MAAO,CAACC,UAAU,WAEtC,kBAAC,IAAD,CAAMC,KAAML,EAAMM,SAAU,OAASC,UAAU,S,GA3BpCC,IAAMC,WAmEVC,uBA1Ba,SAAAd,GAAK,MAAK,CACpCI,KAAKJ,EAAMI,KAEXW,OAAOf,EAAMe,OACbC,OAAOhB,EAAMgB,WAGgB,SAAAC,GAAQ,MAAK,CAC1Cd,QAAQ,kBAAIc,EAASC,YAAQ,CAC3BC,IAAI,YACJC,KAAKC,IACLC,OAAO,OAYTC,QAAQ,SAACC,GAAD,OAAMP,EAAS,CAACG,KAAKK,YAAYC,QAAQF,QAGpCV,CAAoDf","file":"static/js/4.90ab4ec9.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../assets/css/Home.css'\r\n// import Swiper from \"../components/Swiper/Swiper\";\r\n// import {withRouter,Route} from 'react-router-dom'\r\nimport Cell from \"../components/Cell/Cell\";\r\nimport {UPDATE_IPTTXT, UPDATE_HOME,UPDATE_COLUMN } from \"../store/types\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {getDate,} from \"../store/actions\";\r\n\r\nclass Home extends React.Component{\r\n  state={\r\n    // banners:[],\r\n    // home:[] \r\n  };\r\n  componentDidMount(){\r\n    // axios({\r\n    //   url:'/api/home',\r\n    //   params:{\r\n    //     _limit:10,\r\n    //     _page:1\r\n    //   }\r\n    // }).then(\r\n    //   res=>{this.setState({\r\n    //     home:res.data.data\r\n    //   })\r\n    // }\r\n    // );\r\n    this.props.getHome();\r\n    // this.props.getBanner()\r\n  }\r\n\r\n  render(){\r\n    let {home,banner} = this.props;\r\n    return (\r\n      <div className=\"Home\" style={{marginTop:\"0.8rem\"}}>\r\n        {/* <Swiper {...this.props} banners={this.state.banners} dataName={'banner'}/> */}\r\n        <Cell list={home} dataName={'home'}  isShowId={true} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // componentDidMount(prevProps, prevState,snopshot){\r\n    // this.props.getCollection()\r\n    // console.log('cc',this.props)\r\n  // }\r\n\r\n}\r\n\r\n\r\n\r\nconst initMapStateToProps = state => ({\r\n  home:state.home,\r\n  // banner:state.banner,\r\n  ipttxt:state.ipttxt,\r\n  column:state.column,\r\n});\r\n\r\nconst initMapDispatchToProps = dispatch => ({\r\n  getHome:()=>dispatch(getDate({\r\n    url:'/api/home',\r\n    type:UPDATE_HOME,\r\n    _limit:13\r\n  })),\r\n  // getBanner:()=>dispatch(getDate({\r\n  //   url:'/api/banner',\r\n  //   type:UPDATE_BANNER,\r\n  //   _limit:3\r\n  // })),\r\n  // getCollection:()=>dispatch(getDate({\r\n  //   url:'/api/column',\r\n  //   type:UPDATE_COLUMN,\r\n  //   _limit:13\r\n  // })),\r\n  viewNav:(bl)=>dispatch({type:CHAN_IPTTXT,payload:bl}),\r\n});\r\n\r\nexport default connect(initMapStateToProps,initMapDispatchToProps)(Home)\r\n\r\n\r\n"],"sourceRoot":""}