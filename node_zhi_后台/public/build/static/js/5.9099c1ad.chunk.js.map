{"version":3,"sources":["pages/User.js"],"names":["tabs","title","dot","text","User","logout","React","axios","url","method","then","res","window","localStorage","removeItem","store","dispatch","type","payload","err","props","history","push","this","getHome","user","home","column","arr1","className","src","alt","style","width","height","borderRadius","data","username","onClick","map","item","forEach","atem","index","array","_id","goodsid","initialPage","onChange","tab","console","log","onTabClick","display","alignItems","justifyContent","backgroundColor","list","dataName","Component","connect","state","getDate","UPDATE_HOME","_limit","getCollection","UPDATE_COLUMN"],"mappings":"oQAUMA,EAAO,CACX,CAAEC,MAAO,kBAAC,IAAD,CAAOC,IAAI,GAAGC,KAAM,IAApB,6BACT,CAAEF,MAAO,kBAAC,IAAD,CAAOC,IAAI,GAAGC,KAAM,IAApB,iBACT,CAAEF,MAAO,kBAAC,IAAD,CAAOC,IAAI,QAAX,kBAGJE,E,2MA8FLC,OAAO,WACLC,IAAMC,MAAM,CACVC,IAAK,cACLC,OAAQ,WACPC,MACD,SAAAC,GACEC,OAAOC,aAAaC,WAAW,aAC/BC,IAAMC,SAAS,CAACC,KAAK,aAAaC,QAAQ,CAACC,IAAI,KAC/C,EAAKC,MAAMC,QAAQC,KAAK,a,mFArF5BC,KAAKH,MAAMI,Y,+BAMJ,IAAD,EACkBD,KAAKH,MAAxBK,EADC,EACDA,KAAKC,EADJ,EACIA,KAAKC,EADT,EACSA,OACXC,EAAO,GACX,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,gBAEb,4BAAI,yBACHC,IAAI,gBAAgBC,IAAI,GAExBC,MAAO,CAACC,MAAM,GAAGC,OAAO,GAAGC,aAAa,UAEzC,yBAAKN,UAAU,YACb,2BAAKJ,EAAKW,KAAKC,UACf,uBAAGC,QAASf,KAAKlB,QAAjB,iBAGF,wBAAIwB,UAAU,SACZ,4BACE,mCACA,8DAEF,4BACE,mCACA,uBAAGA,UAAU,OAAb,qCAMN,yBAAKA,UAAU,WAEVH,EAAKa,KAAI,SAAAC,GAAI,OACZb,EAAOc,SAAQ,SAACC,EAAKC,EAAMC,GACtBJ,EAAKK,KAAOD,EAAMD,GAAOG,SAASlB,EAAKN,KAAKkB,UAQ7D,6BACE,kBAAC,IAAD,CAAMxC,KAAMA,EACV+C,YAAa,EACbC,SAAU,SAACC,EAAKN,GACdO,QAAQC,IAAI,WAAYR,EAAOM,EAAIhD,MAAMmB,MAAMlB,MAGjDkD,WAAY,SAACH,EAAKN,MAIlB,yBAAKX,MAAO,CAAEqB,QAAS,OAAQC,WAAY,MAAOC,eAAgB,SAASrB,OAAO,QAASsB,gBAAiB,SAC5G,kBAAC,IAAD,CAAMC,KAAM7B,EAAM8B,SAAU,UAE5B,yBAAK1B,MAAO,CAAEqB,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUrB,OAAQ,QAASsB,gBAAiB,SAAjH,+BAGA,yBAAKxB,MAAO,CAAEqB,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUrB,OAAQ,QAASsB,gBAAiB,SAAjH,gCAIF,kBAAC,IAAD,Y,GAtFgBlD,IAAMqD,WAmIXC,uBApBa,SAAAC,GAAK,MAAK,CACpCpC,KAAKoC,EAAMpC,KACXC,KAAKmC,EAAMnC,KACXC,OAAOkC,EAAMlC,WAIgB,SAAAX,GAAQ,MAAK,CAC1CQ,QAAQ,kBAAIR,EAAS8C,YAAQ,CAC3BtD,IAAI,YACJS,KAAK8C,IACLC,OAAO,QAETC,cAAc,kBAAIjD,EAAS8C,YAAQ,CACjCtD,IAAI,cACJS,KAAKiD,cACLF,OAAO,WAIIJ,CAAoDxD","file":"static/js/5.9099c1ad.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../assets/css/User.css';\r\nimport Cell from \"../components/Cell/Cell\";\r\n\r\nimport {getDate} from \"../store/actions\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport store from '../store/store';\r\nimport {UPDATE_HOME} from \"../store/types\";\r\n\r\nimport {Tabs, WhiteSpace, Badge } from 'antd-mobile';\r\nconst tabs = [\r\n  { title: <Badge dot=\"\" text={''}>我的收藏</Badge> },\r\n  { title: <Badge dot=\"\" text={''}>回答</Badge> },\r\n  { title: <Badge dot=\"true\">文章</Badge> },\r\n];\r\n\r\n class User extends React.Component{\r\n  // state={\r\n  //   home:[] \r\n  // };\r\n\r\n  componentDidMount(){\r\n    // axios({\r\n    //   url:'/mock/essay',\r\n    //   params:{\r\n    //     _limit:6,\r\n    //     _page:1\r\n    //   }\r\n    // }).then(\r\n    //   res=>this.setState({\r\n    //     home:res.data.data\r\n    //   })\r\n    // ); \r\n    this.props.getHome();\r\n  }\r\n\r\n    \r\n\r\n\r\n  render(){\r\n    let {user,home,column}= this.props; \r\n    let arr1 = []\r\n    return (\r\n      <div className=\"user\">\r\n        <div className=\"user--header\">\r\n\r\n          <h2><img\r\n           src=\"/img/timg.jpg\" alt=\"\" \r\n            // src={'http://localhost:3000' + user.data.icon}\r\n           style={{width:70,height:70,borderRadius:\"50%\"}}/></h2>\r\n\r\n          <div className=\"user-box\">\r\n            <a >{user.data.username}</a>\r\n            <a onClick={this.logout}>注销</a>\r\n          </div>\r\n\r\n          <ul className=\"clear\">\r\n            <li>\r\n              <span>0</span>\r\n              <p>关注我的人</p>\r\n            </li>\r\n            <li>\r\n              <span>0</span>\r\n              <p className=\"end\">我关注的人</p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n\r\n        <div className=\"docList\">\r\n          {  \r\n             home.map(item => (\r\n              column.forEach((atem,index,array)=>{\r\n                if(item._id == array[index].goodsid){arr1.push(item)}\r\n             })\r\n           ))\r\n           \r\n       }\r\n          {/* <Cell list={arr1} dataName={'home'} /> */}\r\n        </div>\r\n       \r\n  <div>\r\n    <Tabs tabs={tabs}\r\n      initialPage={0}\r\n      onChange={(tab, index) => { \r\n        console.log('onChange', index, tab.title.props.dot);\r\n        // tab.title.props.dot = \"false\"\r\n       }}\r\n      onTabClick={(tab, index) => { \r\n        // console.log('onTabClick', index, tab);\r\n       }}\r\n    >\r\n      <div style={{ display: 'flex', alignItems: 'top', justifyContent: 'center',height:\"450px\", backgroundColor: '#fff' }}>\r\n      <Cell list={arr1} dataName={'home'} />\r\n      </div>\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '150px', backgroundColor: '#fff' }}>\r\n        敬请期待...\r\n      </div>\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '150px', backgroundColor: '#fff' }}>\r\n        敬请期待...\r\n      </div>\r\n    </Tabs>\r\n    <WhiteSpace />\r\n  </div>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  logout=()=>{\r\n    React.axios({\r\n      url: '/api/logout',\r\n      method: 'delete'\r\n    }).then(\r\n      res=>{\r\n        window.localStorage.removeItem('news_user');\r\n        store.dispatch({type:'CHECK_USER',payload:{err:1}});\r\n        this.props.history.push('/home')\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nconst initMapStateToProps = state => ({\r\n  user:state.user,\r\n  home:state.home,\r\n  column:state.column\r\n\r\n});\r\n\r\nconst initMapDispatchToProps = dispatch => ({\r\n  getHome:()=>dispatch(getDate({\r\n    url:'/api/home',\r\n    type:UPDATE_HOME,\r\n    _limit:100\r\n  })),\r\n  getCollection:()=>dispatch(getDate({\r\n    url:'/api/column',\r\n    type:UPDATE_COLUMN,\r\n    _limit:100\r\n  })),\r\n});\r\n\r\nexport default connect(initMapStateToProps,initMapDispatchToProps)(User)"],"sourceRoot":""}